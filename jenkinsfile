pipeline {
    agent any 
    stages {
        stage('LOAD PARAMETERS') { 
            steps {
                //
               load "parameters.groovy"
            }
        }
        stage('Test') { 
            steps {
                // 
                script {
                    try {
                // Get some code from a GitHub repository
						if (env.SAST_GIT_URL != 'null') {				
                git "${env.SAST_GIT_URL}"
                bat "git clone https://github.com/harishpallapu/sonarqube_scannar_windows.git"
                bat "./sonarqube_scannar_windows/sonar-scanner-4.6.2.2472-windows/bin/sonar-scanner.bat"
					        } else {
                                                        echo "skipping the stage ${env.STAGE_NAME}.............................!"				
                   } } catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed...............!"
						}                
                // Run Maven on a Unix agent.
                //sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        } 
        }

}
}
