import com.cloudbees.hudson.plugins.modeling.*
pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M2_HOME"
    }
    stages {
            stage('load parameters') { 
            steps {
                load "parameters.groovy"
            }
        }
	stage('parallel stage') {
	   parallel {
        stage('SAST Analysis') {
            steps {
                script {
                    try {
                // Get some code from a GitHub repository
						if (env.sast_git_url != 'null') {				
                git "${env.sast_git_url}"
                bat "git clone https://github.com/harishpallapu/sonarqube_scannar_windows.git"
                bat "./sonarqube_scannar_windows/sonar-scanner-4.6.2.2472-windows/bin/sonar-scanner.bat"
					        } else {
                                                        echo "skipping the stage ${env.STAGE_NAME}.............................!"				
                   } } catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed...............!"
						}                
                // Run Maven on a Unix agent.
                //sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        } 
        }
        stage('SCA') {
            steps {
			      script {
						try {
							bat '''
							wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.2.2/dependency-check-6.2.2-release.zip
							 PowerShell Expand-Archive -Path "dependency-check-6.2.2-release.zip"  
							./dependency-check-6.2.2-release/dependency-check/bin/dependency-check.bat --noupdate --project "TeachersFCU" --scan "Shoppingcart/lib/" --format HTML --out .
						    '''
						} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
						}
				}

	    }
        }
	}
	}
	stage('build') {
            steps {
				script {
						try {
						if (env.build_git_url != 'null') {
                git "${env.build_git_url}"
							bat 'mvn clean package'
					        } else {
                                                        echo 'skipping the stage ${env.STAGE_NAME}.............................!'
                                                        }							
						} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
						}
				}							
            }
	 }
     stage("deploy") {
         steps {
					script {
						try {
						if (env.tomcat_ip != 'null') {						
            deploy adapters: [tomcat8(credentialsId: 'tomcat', path: '', url: '${env.tomcat_ip}')], contextPath: null, onFailure: false, war: '**/*.war'
					        } else {
                                                        echo 'skipping the stage ${env.STAGE_NAME}.............................!'	    
					}	} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
						}		
					}
				}
	}
	stage('FunctionalAutomation_Web') {
           			steps {
		   			script {
						try {
						if (env.functional_web_git_url != 'null') {						
							bat """git clone ${env.functional_web_git_url}
							cd webtest
							mvn test """
					        } else {
                                                        echo 'skipping the stage ${env.STAGE_NAME}.............................!'														
					}	} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
						}					
					}
	 		}
	 }
	stage('FunctionalAutomation_Mobile') {
            				steps {
		   			script {
						try {
						if (env.functional_mobile_git_url != 'null') {						
							bat """ git clone ${env.functional_mobile_git_url}
							cd mobiletest
							mvn test """
					        } else {
                                                        echo 'skipping the stage ${env.STAGE_NAME}.............................!'							
					}	} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
							}
					}
				}
	}
        stage('DAST') {
            steps {
                script {
                    try {
						if (env.dast_ip != 'null') {		    
                       arachniScanner checks: '*', format: 'html', url: 'http://mypublicip:8084/SpringMVCAnnotationShoppingCart/'
					        } else {
                                                        echo 'skipping the stage ${env.STAGE_NAME}.............................!'                       
             }       } catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"                       
                    }
                }
            }
        }
	        stage('Performance') {
            			steps {
		   			script {
						try {
						if (env.jmeter_git_url != 'null') {						
							bat """
                            git clone ${env.jmeter_git_url}
			    dir
                            cd folder
                            C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/dynamic-job/folder/apache-jmeter-5.4.1/apache-jmeter-5.4.1/bin/jmeter.bat -n -t OnlineShop_1.jmx -l OnlineShop_result.jtl -e -o OnlineShop_%BUILD_NUMBER%.html
            					 """
					        } else {
                                                        echo 'skipping the stage ${env.STAGE_NAME}.............................!'						 
            			}		} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
							}
					}
			}
		} 
        stage('Nexus') {
            steps {
		   			script {
						if (env.nexus_ip != 'null') {											
               bat 'tar -a -c -f web-test-report-%BUILD_NUMBER%.zip webtest/target/surefire-reports/*'
               bat 'tar -a -c -f mobile-test-report-%BUILD_NUMBER%.zip mobiletest/target/surefire-reports/*'
               bat 'tar -a -c -f jmeter-test-report-%BUILD_NUMBER%.zip folder/OnlineShop_%BUILD_NUMBER%.html/*'
               bat '''mkdir test-reports
               
               cd test-reports
               
               curl -T "C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/dynamic-job/Shoppingcart/.scannerwork/report-task.txt" -u admin:admin123 -v http://${env.nexus_ip}:8081/repository/maven-central-repo/sast-reports/ 
               curl -T "C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/dynamic-job/web-test-report-%BUILD_NUMBER%.zip" -u admin:admin123 -v http://${env.nexus_ip}:8081/repository/maven-central-repo/web-test-report/ 
               curl -T "C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/dynamic-job/mobile-test-report-%BUILD_NUMBER%.zip" -u admin:admin123 -v http://${env.nexus_ip}:8081/repository/maven-central-repo/mobile-test-report/ 
               curl -T "C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/dynamic-job/jmeter-test-report-%BUILD_NUMBER%.zip" -u admin:admin123 -v http://${env.nexus_ip}:8081/repository/maven-central-repo/jmeter-test-report/ 
               curl -T "C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/dynamic-job/arachni-report-html.zip" -u admin:admin123 -v http://${env.nexus_ip}:8081/repository/maven-central-repo/dast-test-report/ 
               '''
					        } else {
                                                        echo "skipping the stage ${env.STAGE_NAME}.............................!"
                                                        }
					}	       
                           }
        }         
    }
 	post {
        // Clean after build
        always {
		mail to: 'nihas0505@gmail.com',
        subject: "Status of pipeline: ${currentBuild.fullDisplayName}",
        body: """${env.BUILD_URL} has result ${currentBuild.result}
        
		Please find build reports................................!
		
		SAST REPORTS
		http://localhost:8081/repository/maven-central-repo/sast-reports/report-task.txt
		--------------------------------------------------------------------------------------------------------------------------------------
		FUNCTIONAL AUTOMATION WEB REPORTS
		http://localhost:8081/repository/maven-central-repo/web-test-report/web-test-report-%BUILD_NUMBER%.zip
		----------------------------------------------------------------------------------------------------------------------------------------
		FUNCTIONAL AUTOMATION MOBILE REPORTS
		http://localhost:8081/repository/maven-central-repo/mobile-test-report/mobile-test-report-%BUILD_NUMBER%.zip
		------------------------------------------------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------------------------------------------
		JMETER REPORTS
		http://localhost:8081/repository/maven-central-repo/jmeter-test-report/jmeter-test-report-%BUILD_NUMBER%.zip
		
		----------------------------------------------------------------------------------------------------------------------------------------
		DAST REPORTS
		http://localhost:8081/repository/maven-central-repo/dast-test-report/arachni-report-html-%BUILD_NUMBER%.zip
		
		
		THE PIPELINE IS SUCCESSFULL AND THIS MAIL IS TO REQUEST FOR QA SIGNOFF AND PROCEED TO UAT 0R PROD ENV
		
		For more information please contact DEVSECOPS team...........!"""        
        }
    }     
}
