pipeline {
    agent any
    stages {
            stage('load parameters') { 
            steps {
                load "parameters.groovy"
            }
        }
        stage('SAST analysis') {
            steps {
			      script {
						try {
               	 			                git "${env.SAST_GIT_URL}"
					                sh 'git clone https://github.com/harishpallapu/sonarqube-scanner-scripts.git'
							sh 'cp -r sonarqube-scanner-scripts/* .'
							sh './sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner'
							sh 'ls -al'
							sh 'cat .scannerwork/report-task.txt  | mail -s "Build-no-${BUILD_NUMBER}-sonar-reports-sucessfull" nihas0505@gmail.com'
						} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
							JiraFunction()
						}   
					}
			}
	}
        stage('SCA') {
                    when { expression { env.SAST_GIT_URL =! null } }

            steps {
			      script {
						try {
							sh 'wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.2.2/dependency-check-6.2.2-release.zip'
							sh 'unzip -q dependency-check-6.2.2-release.zip'
							sh './dependency-check/bin/dependency-check.sh --noupdate --project "TeachersFCU" --scan "Shoppingcart/lib/" --format HTML --out .'
						
						} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
							JiraFunction()
						}
				}

	    }
        }
	stage('build') {
            steps {
				script {
						try {
							sh 'mvn clean package'
						} catch (err) {
							echo err.getMessage()
							unstable(message: "${STAGE_NAME} is unstable")
							echo "Error detected, ${env.STAGE_NAME} failed..................!"
							JiraFunction()
						}
				}							
            }
	 }

	}
	post {
        // Clean after build
        always {
		mail to: 'nihas0505@gmail.com',
          	subject: "Status of pipeline: ${currentBuild.fullDisplayName}",
         	body: """${env.BUILD_URL} has result ${currentBuild.result}
		
		Please find build reports................................!
		
		SAST REPORTS
		http://${env.NEXUS_IP}:8081/repository/jenkins-reports/sast-reports/report-task-${BUILD_NUMBER}.txt
		--------------------------------------------------------------------------------------------------------------------------------------
		FUNCTIONAL AUTOMATION WEB REPORTS
		http://${env.NEXUS_IP}:8081/repository/jenkins-reports/web-test-reports/web-test-report-${BUILD_NUMBER}.zip
		----------------------------------------------------------------------------------------------------------------------------------------
		FUNCTIONAL AUTOMATION MOBILE REPORTS
		http://${env.NEXUS_IP}:8081/repository/jenkins-reports/mobile-test-reports/mobile-test-report-${BUILD_NUMBER}.zip
		------------------------------------------------------------------------------------------------------------------------------------------
		DAST REPORTS
		http://${env.NEXUS_IP}:8081/repository/jenkins-reports/dast-reports/report-${BUILD_NUMBER}.zip
		-----------------------------------------------------------------------------------------------------------------------------------------
		JMETER REPORTS
		http://${env.NEXUS_IP}:8081/repository/jenkins-reports/jmeter-reports/jmeterreport-${BUILD_NUMBER}.zip
		
		THE PIPELINE IS SUCCESSFULL AND THIS MAIL IS TO REQUEST FOR QA SIGNOFF AND PROCEED TO UAT 0R PROD ENV
		
		For more information please contact DEVSECOPS team...........!"""
		jiraSendBuildInfo site: 'vamsisanagala.atlassian.net'
		cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true)
        }
    }
}
void JiraFunction() {
    sh ("""curl -D- -H "Authorization: Basic dmFtc2lraXJhbnJlZGR5QGdtYWlsLmNvbTpxdkRZSTNWbUNJdWUzWlZyZ2NiVTA5MjA=" -X POST --data '{"fields":{"project":{"key": "TFF"},"summary": "${env.JOB_NAME} ${env.STAGE_NAME} stage is failed build no-${env.BUILD_NUMBER}.","description": "${env.STAGE_NAME} stage failed.\\n Build URL $BUILD_URL \\n Build Number ${env.BUILD_NUMBER} ","issuetype": {"name": "Bug"}}}' -H "Content-Type: application/json" https://vamsisanagala.atlassian.net/rest/api/2/issue""")
	}
